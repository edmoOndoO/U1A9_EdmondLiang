import static java.lang.Character.isDigit;
import javax.swing.JOptionPane;
// Import JOptionPane, and isDigit from java

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author edmon
 */
public class U1A9_EdmondLiang extends javax.swing.JFrame {

    /**
     * Creates new form U1A9_EdmondLiang
     */
    public U1A9_EdmondLiang() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtsecondtest = new javax.swing.JTextField();
        lblindividualaverage = new javax.swing.JLabel();
        lbltestthree = new javax.swing.JLabel();
        lblwholeclassaverage = new javax.swing.JLabel();
        txtthirdtest = new javax.swing.JTextField();
        lbltestfour = new javax.swing.JLabel();
        txtfourthtest = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtlistdata = new javax.swing.JTextArea();
        btnadddata = new javax.swing.JButton();
        btnlistdata = new javax.swing.JButton();
        lblappname = new javax.swing.JLabel();
        lblfirstname = new javax.swing.JLabel();
        lbllastname = new javax.swing.JLabel();
        txtfirstname = new javax.swing.JTextField();
        txtlastname = new javax.swing.JTextField();
        lbltestone = new javax.swing.JLabel();
        txtfirsttest = new javax.swing.JTextField();
        btncalculatestudentaverage = new javax.swing.JButton();
        lbltesttwo = new javax.swing.JLabel();
        btncalculatecourseaverage = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 255));

        lblindividualaverage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblindividualaverage.setText("Student Average: ");

        lbltestthree.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbltestthree.setText("Test 3:");

        lblwholeclassaverage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblwholeclassaverage.setText("Course Average:");

        lbltestfour.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbltestfour.setText("Test 4:");

        txtlistdata.setColumns(20);
        txtlistdata.setRows(5);
        jScrollPane1.setViewportView(txtlistdata);

        btnadddata.setText("Add");
        btnadddata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadddataActionPerformed(evt);
            }
        });

        btnlistdata.setText("List");
        btnlistdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlistdataActionPerformed(evt);
            }
        });

        lblappname.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblappname.setText("Student grade app");

        lblfirstname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblfirstname.setText("First name:");

        lbllastname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbllastname.setText("Last name:");

        lbltestone.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbltestone.setText("Test 1:");

        btncalculatestudentaverage.setText("Student Average");
        btncalculatestudentaverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalculatestudentaverageActionPerformed(evt);
            }
        });

        lbltesttwo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbltesttwo.setText("Test 2:");

        btncalculatecourseaverage.setText("Course Average");
        btncalculatecourseaverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalculatecourseaverageActionPerformed(evt);
            }
        });

        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnadddata)
                            .addComponent(btnlistdata)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblfirstname)
                                            .addComponent(lbllastname)
                                            .addComponent(txtlastname, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(98, 98, 98)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbltestone)
                                                    .addComponent(txtfirsttest, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtsecondtest, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(19, 19, 19)
                                                        .addComponent(lbltesttwo))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbltestthree)
                                                    .addComponent(txtthirdtest, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(17, 17, 17)
                                                        .addComponent(lbltestfour))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtfourthtest, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addComponent(txtfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblindividualaverage)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(lblappname))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btncalculatestudentaverage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btncalculatecourseaverage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblwholeclassaverage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblappname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblfirstname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbllastname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtlastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblindividualaverage))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbltestone)
                            .addComponent(lbltesttwo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfirsttest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtsecondtest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbltestthree)
                            .addComponent(lbltestfour))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtthirdtest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfourthtest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblwholeclassaverage)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnadddata)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnlistdata))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncalculatestudentaverage)
                    .addComponent(btncalculatecourseaverage)
                    .addComponent(btnexit))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Create a 2D String array named 'mark' with 30 rows (or outer arrays)
    
    // but without specifying the number of columns (inner arrays) for each row.
    
    // This allows for a jagged array where each row can have a different number of elements.
    private void btnadddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadddataActionPerformed
        //Get all the variables for simple usage.
        //Remove any unnecessary spaces at the conclusion by trimming
        String studentname = txtfirstname.getText().trim();
        
        String lastName = txtlastname.getText().trim();
        
        String test1Mark = txtfirsttest.getText().trim();
        
        String test2Mark = txtsecondtest.getText().trim();
        
        String test3Mark = txtthirdtest.getText().trim();
        
        String test4Mark = txtfourthtest.getText().trim();

        // Check if test marks are in double digit
        if(!isDouble(test1Mark))
        {
            JOptionPane.showMessageDialog(null, "Test 1 mark is not a two digit number", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
                
        if(!isDouble(test2Mark))
        {
            JOptionPane.showMessageDialog(null, "Test 2 mark is not a two digit number", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
                       
        if(!isDouble(test3Mark))
        {
            JOptionPane.showMessageDialog(null, "Test 3 mark is not a two digit number", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
        
        if(!isDouble(test4Mark))
        {
            JOptionPane.showMessageDialog(null, "Test 4 mark is not a two digit number", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
                
        // Check if the first name of student starts with a number
        if(isDigit(studentname.toCharArray()[0]))
        {
            JOptionPane.showMessageDialog(null, "Your first or last name cannot begin with a number.", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
                     
        if(isDigit(lastName.toCharArray()[0]))
        {
            JOptionPane.showMessageDialog(null, "Your first or last name cannot begin with a number.", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
                                    
        // Verify that the first name is empty.
        if(studentname.equals(""))
        {
            JOptionPane.showMessageDialog(null, "First Name cannot be empty", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
        
        // Verify that the last name is empty.
        if(lastName.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Last Name cannot be empty", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
        
        // Check if the student name already exists.
        if(studentExists(studentname, lastName))
        {
            JOptionPane.showMessageDialog(null, "student already exists", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
        
        int emptySlots = 0;  
        for (int i = 0; i < mark.length; i++)    
        {
            if(mark[i] == null)
            emptySlots++;
        }

        if(emptySlots == 0)
        {
            JOptionPane.showMessageDialog(null, "class list is full", "error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        
                       
        // Add to the first space you find available.
        for(int i = 0; i < mark.length; i++)
        {
            if(mark[i] == null)
            {
                mark[i] = new String[] { studentname, lastName, test1Mark, test2Mark, test3Mark, test4Mark };
                break;
            }
        }

        JOptionPane.showMessageDialog(null, "Added", "Success", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnadddataActionPerformed

    String[][] mark = new String[30][];
    
        
    private void btnlistdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlistdataActionPerformed
        // Set initial string
        String toSet = ""; 

        // If an item in the class is not null, add it to the string for that item.
        for(int i = 0; i < mark.length; i++)
        {
            if(mark[i] != null)
            {
                toSet +=  mark[i][0] + ", " + mark[i][1] + ", " + mark[i][2] + "%, " + mark[i][3] + "%, " + mark[i][4] + "%, " + mark[i][5] + "%\n";
            }
        }

        // Set text area
        txtlistdata.setText(toSet);
    }//GEN-LAST:event_btnlistdataActionPerformed

    
    
     
    private void btncalculatestudentaverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalculatestudentaverageActionPerformed
        // Declare these for simple access
        String studentname = txtfirstname.getText();
        
        String lastName = txtlastname.getText();

        // Verify that each item in the class list corresponds to the required names.
        // To check if the student exists on the list.
        boolean studentExists = false; 
        for(int i = 0; i < mark.length; i++)
        {
            // Remove any spaces from the string's end after lowercaseizing the words.
            
            if(studentExists(studentname, lastName))
            {
                if(studentname.toLowerCase().trim().equals(mark[i][0].toLowerCase()) && lastName.toLowerCase().trim().equals(mark[i][1].toLowerCase()))
                {
                    double avg = (Double.parseDouble(mark[i][2]) + Double.parseDouble(mark[i][3]) + Double.parseDouble(mark[i][4]) + Double.parseDouble(mark[i][5])) / 4;
                    studentExists = true; 
                    // Student is found

                    lblindividualaverage.setText("Student Average is: " + avg + "%");
                    
                    break;
                }
            }
        }

        if(!studentExists)
            
        {
            JOptionPane.showMessageDialog(null, "student does not exist", "error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btncalculatestudentaverageActionPerformed

    private void btncalculatecourseaverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalculatecourseaverageActionPerformed
        double total = 0;
        
        int students = 0;
        
        for(int i = 0; i < mark.length; i++)
        {
            // If the slot is not empty.
            if(mark[i] != null)
            {
                double avg = 0; 
                // Declare init value.

                // Add all 4 of the test marks.
                avg += Double.parseDouble(mark[i][2]);
                
                avg += Double.parseDouble(mark[i][3]);
                
                avg += Double.parseDouble(mark[i][4]);
                
                avg += Double.parseDouble(mark[i][5]);

                // Divide the number by four.
                avg = avg / 4;

                // Add it to the class average.
                total += avg;
                students++;
            }
        }

        total = total / students;
        
        double roundedAverage = Math.round(total * 100.0) / 100.0;

        lblwholeclassaverage.setText("Course average is: " + roundedAverage + "%");
    }//GEN-LAST:event_btncalculatecourseaverageActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        
        System.exit(0);
        
        //exit app
        
    }//GEN-LAST:event_btnexitActionPerformed
    
    public boolean isDouble(String value) {
        // See if the value can be parsed into a double. If it is, double it and output true.
        
        // If not return false
        
        try {
            
            Double.parseDouble(value);
            
            return true;
            
        } catch (NumberFormatException e) {
            
            return false;
            
        }
    }
    
    public boolean studentExists(String studentname, String lastName)
    {
        // Verify if the argument is met for each item that is not null. If it is, the user must be there. If not, the user doesn't exist.
        
        for(int i = 0; i < mark.length; i++)
            
        {
            if(mark[i] != null)
            {
                if (studentname.toLowerCase().trim().equals(mark[i][0].toLowerCase()) && lastName.toLowerCase().trim().equals(mark[i][1].toLowerCase()))
                {
                    return true;
                }
            }
        }
        
        return false;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(U1A9_EdmondLiang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(U1A9_EdmondLiang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(U1A9_EdmondLiang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(U1A9_EdmondLiang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new U1A9_EdmondLiang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadddata;
    private javax.swing.JButton btncalculatecourseaverage;
    private javax.swing.JButton btncalculatestudentaverage;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnlistdata;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblappname;
    private javax.swing.JLabel lblfirstname;
    private javax.swing.JLabel lblindividualaverage;
    private javax.swing.JLabel lbllastname;
    private javax.swing.JLabel lbltestfour;
    private javax.swing.JLabel lbltestone;
    private javax.swing.JLabel lbltestthree;
    private javax.swing.JLabel lbltesttwo;
    private javax.swing.JLabel lblwholeclassaverage;
    private javax.swing.JTextField txtfirstname;
    private javax.swing.JTextField txtfirsttest;
    private javax.swing.JTextField txtfourthtest;
    private javax.swing.JTextField txtlastname;
    private javax.swing.JTextArea txtlistdata;
    private javax.swing.JTextField txtsecondtest;
    private javax.swing.JTextField txtthirdtest;
    // End of variables declaration//GEN-END:variables
}
